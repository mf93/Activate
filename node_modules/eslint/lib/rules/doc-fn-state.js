/**
 * Created by mafeld on 4/14/2017.
 */
"use strict";

//------------------------------------------------------------------------------
// Rule Definition
//------------------------------------------------------------------------------

function checkLastSegment(node) {
    // report problem for function if last code path segment is reachable
    console.log("here");
}

module.exports = {
    meta: {
        docs: {
            description: "disallow unnecessary semicolons",
            category: "Possible Errors",
            recommended: true
        },
        fixable: "code",
        schema: [] // no options
    },
    create: function (context) {
        // declare the state of the rule
        console.log("here");
        return {
            ReturnStatement: function (node) {
                // at a ReturnStatement node while going down
                console.log("here");
            },
            // at a function expression node while going up:
            "FunctionExpression:exit": checkLastSegment,
            "ArrowFunctionExpression:exit": checkLastSegment,
            onCodePathStart: function (codePath, node) {
                // at the start of analyzing a code path
            },
            onCodePathEnd: function (codePath, node) {
                // at the end of analyzing a code path
            }
        };
    }
};